{"version":3,"sources":["sliceReducers/filterSlice.js","sliceReducers/todoSlice.js","component/Footer.js","component/Header.js","sliceReducers/editIdSlice.js","component/Todo.js","component/TodoList.js","app/App.js","app/store.js","reportWebVitals.js","index.js"],"names":["filters","all","active","todo","isCompleted","completed","filter","createSlice","name","initialState","reducers","setFilter","state","action","payload","reducer","actions","todos","id","addTodo","unshift","toggleTodo","forEach","toggleAll","removeTodo","clearTodoCompleted","editTodo","cancelTodo","Footer","props","useSelector","dispatch","useDispatch","listFilters","Object","keys","length","className","map","item","index","href","onClick","slice","toUpperCase","Header","useState","input","setInput","handleAddTodo","newId","some","type","checked","every","onChange","target","htmlFor","icon","faChevronDown","placeholder","autoFocus","value","onKeyUp","event","keyCode","faPlus","editId","startEdit","console","log","endEdit","Todo","defaultChecked","onDoubleClick","faTimes","defaultValue","e","newTodo","handleKeyUp","onBlur","TodoList","App","React","Component","store","configureStore","todoSlice","filterSlice","editIdSlice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ddc10196.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const filters = {\n  all: () => {\n    return true;\n  },\n  active: (todo) => {\n    return todo.isCompleted === false;\n  },\n  completed: (todo) => {\n    return todo.isCompleted === true;\n  },\n};\n\nconst filter = createSlice({\n  name: \"filter\",\n  initialState: \"all\",\n  reducers: {\n    setFilter: (state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nconst { reducer, actions } = filter;\nexport const { setFilter } = actions;\nexport default reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialTodos = [\n  { id: 0, name: \"Do House Work\", isCompleted: true },\n  { id: 1, name: \"Do Exercise\", isCompleted: false },\n  { id: 2, name: \"Learn English\", isCompleted: false },\n];\n\nconst todos = createSlice({\n  name: \"todos\",\n  initialState: initialTodos,\n  reducers: {\n    addTodo: (state, action) => {\n      state.unshift(action.payload);\n    },\n    toggleTodo: (state, action) => {\n      state.forEach((todo) => {\n        if (todo.id === action.payload) {\n          todo.isCompleted = !todo.isCompleted;\n        }\n      });\n    },\n    toggleAll: (state, action) => {\n      state.forEach((todo) => (todo.isCompleted = action.payload));\n    },\n    removeTodo: (state, action) => {\n      return state.filter((todo) => todo.id !== action.payload);\n    },\n    clearTodoCompleted: (state, action) => {\n      return state.filter((todo) => todo.isCompleted === false);\n    },\n    editTodo: (state, action) => {\n      state.forEach((todo) => {\n        if (todo.id === action.payload.id) {\n          todo.name = action.payload.name;\n        }\n      });\n    },\n    cancelTodo: (state, action) => {\n      return state;\n    },\n  },\n});\n\nconst { reducer, actions } = todos;\nexport const {\n  addTodo,\n  toggleTodo,\n  toggleAll,\n  removeTodo,\n  clearTodoCompleted,\n  editTodo,\n  cancelTodo,\n} = actions;\nexport default reducer;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { filters, setFilter } from \"../sliceReducers/filterSlice\";\nimport { clearTodoCompleted } from \"../sliceReducers/todoSlice\";\nimport \"./Footer.scss\";\n\nfunction Footer(props) {\n  const todos = useSelector((state) => state.todos);\n  const filter = useSelector((state) => state.filter);\n  const dispatch = useDispatch();\n  const listFilters = Object.keys(filters);\n\n  if (todos.length <= 0) return null;\n  return (\n    <div className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>\n          {todos.filter((todo) => todo.isCompleted === false).length}\n        </strong>{\" \"}\n        item left\n      </span>\n      <ul className=\"filters\">\n        {listFilters.map((item, index) => (\n          <li key={index}>\n            <a\n              className={item === filter ? \"selected\" : \"\"}\n              href=\"#/\"\n              onClick={() => dispatch(setFilter(item))}\n            >\n              {item.slice(0, 1).toUpperCase() + item.slice(1)}\n            </a>\n          </li>\n        ))}\n      </ul>\n      <button\n        className=\"clear-completed\"\n        onClick={() => dispatch(clearTodoCompleted())}\n      >\n        Clear completed\n      </button>\n    </div>\n  );\n}\n\nexport default Footer;\n","import { faChevronDown, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodo, toggleAll } from \"../sliceReducers/todoSlice\";\nimport \"./Header.scss\";\n\nfunction Header() {\n  const [input, setInput] = useState(\"\");\n\n  const todos = useSelector((state) => state.todos);\n  const dispatch = useDispatch();\n\n  function handleChange({ target }) {\n    setInput(target.value);\n  }\n\n  function handleAddTodo() {\n    if (input) {\n      let newId = todos.length;\n      while (todos.some((todo) => todo.id === newId)) {\n        newId++;\n      }\n      dispatch(\n        addTodo({\n          id: newId,\n          name: input,\n          isCompleted: false,\n        })\n      );\n      setInput(\"\");\n    }\n  }\n\n  return (\n    <div className=\"header\">\n      <h1>todoList</h1>\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        checked={todos.every((todo) => todo.isCompleted === true)}\n        onChange={({ target }) => dispatch(toggleAll(target.checked))}\n      />\n      <label htmlFor=\"toggle-all\">\n        <FontAwesomeIcon icon={faChevronDown} />\n      </label>\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        autoFocus\n        value={input}\n        onChange={handleChange}\n        onKeyUp={(event) => event.keyCode === 13 && handleAddTodo()}\n      />\n      <button type=\"button\" className=\"btn\" onClick={handleAddTodo}>\n        <FontAwesomeIcon icon={faPlus} />\n      </button>\n    </div>\n  );\n}\n\nexport default Header;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst editId = createSlice({\n  name: \"editId\",\n  initialState: null,\n  reducers: {\n    startEdit: (state, action) => {\n      console.log(action.payload, state);\n      return action.payload;\n    },\n    endEdit: (state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nconst { reducer, actions } = editId;\nexport const { startEdit, endEdit } = actions;\nexport default reducer;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  cancelTodo,\n  editTodo,\n  removeTodo,\n  toggleTodo,\n} from \"../sliceReducers/todoSlice\";\nimport { endEdit, startEdit } from \"../sliceReducers/editIdSlice\";\n\nfunction Todo(props) {\n  const editId = useSelector((state) => state.editId);\n  const dispatch = useDispatch();\n  const { todo } = props;\n\n  function handleKeyUp(e, todo) {\n    if (e.keyCode === 13) {\n      if (e.target.value) {\n        const newTodo = { ...todo, name: e.target.value };\n        dispatch(editTodo(newTodo));\n        dispatch(endEdit(null));\n      }\n    } else if (e.keyCode === 27) {\n      dispatch(cancelTodo());\n      dispatch(endEdit(null));\n    }\n  }\n\n  function handleBlur() {\n    dispatch(cancelTodo());\n    dispatch(endEdit(null));\n  }\n\n  return (\n    <li\n      className={\n        todo.isCompleted\n          ? \"completed\"\n          : \"\" || todo.id === editId\n          ? \"editing\"\n          : \"\"\n      }\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          defaultChecked={todo.isCompleted}\n          onChange={() => dispatch(toggleTodo(todo.id))}\n        />\n        <label onDoubleClick={() => dispatch(startEdit(todo.id))}>\n          {todo.name}\n        </label>\n        <button\n          className=\"destroy\"\n          type=\"button\"\n          onClick={() => dispatch(removeTodo(todo.id))}\n        >\n          <FontAwesomeIcon icon={faTimes} />\n        </button>\n      </div>\n      {todo.id === editId && (\n        <input\n          className=\"edit\"\n          type=\"text\"\n          defaultValue={todo.name}\n          autoFocus\n          onKeyUp={(e) => handleKeyUp(e, todo)}\n          onBlur={handleBlur}\n        />\n      )}\n    </li>\n  );\n}\n\nexport default Todo;\n","import \"./TodoList.scss\";\nimport Todo from \"./Todo\";\nimport { useSelector } from \"react-redux\";\nimport { filters } from \"../sliceReducers/filterSlice\";\n\nfunction TodoList(props) {\n  const todos = useSelector((state) => state.todos);\n  const filter = useSelector((state) => state.filter);\n\n  if (todos.length <= 0) return null;\n  return (\n    <div className=\"main\">\n      <ul className=\"todo-list\">\n        {todos.filter(filters[filter]).map((todo) => (\n          <Todo key={todo.id} todo={todo} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React from \"react\";\nimport Footer from \"../component/Footer\";\nimport Header from \"../component/Header\";\nimport TodoList from \"../component/TodoList\";\nimport \"./App.scss\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"todoapp\">\n        <Header />\n        <TodoList />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport todoSlice from \"../sliceReducers/todoSlice\";\nimport filterSlice from \"../sliceReducers/filterSlice\";\nimport editIdSlice from \"../sliceReducers/editIdSlice\";\n\nconst store = configureStore({\n  reducer: {\n    todos: todoSlice,\n    filter: filterSlice,\n    editId: editIdSlice,\n  },\n});\n\nexport default store;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./app/App\";\nimport store from \"./app/store\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}